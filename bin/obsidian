#!/bin/bash

VAULT="/slack/documents/Notes"

files=()
mode='open'

while [ "${1:0:1}" = "-" ]; do
  case "$1" in
    -l|--list)
      mode='list'
      shift
      [ $# -eq 0 ] && set -- ''
      ;;
    -e|--edit)
      mode='edit'
      shift
      ;;
    -*)
      echo "Usage: obsidian [-l|--list] [-e|--edit] [PATTERN..]"
      exit 1
      ;;
  esac
done

# When running interactively without arguments,
# use the current project/folder name as pattern.
if [ $# -eq 0 ] && [ "$TERM" != "dumb" ]; then
  root=$( git rev-parse --show-toplevel 2>/dev/null )
  [ "$root" ] || root="$PWD"
  set -- "$(basename "$root")"
fi

for pattern in "$@"; do
  # First look for filenames starting with the pattern
  mapfile -t matches < <( fdfind "$pattern.*\.md$" "$VAULT" -t f )

  # Otherwise try a fuzzy search
  if [ "${#matches[@]}" = 0 ]; then
    mapfile -t matches < <(
      fdfind '\.md$' "$VAULT" -t f \
        | fzf -d/ -n5.. -f "$pattern"
    )
  fi

  files=( "${files[@]}" "${matches[@]}" )
done

if [ "${#files[@]}" = 0 ] && [ "$TERM" != "dumb" ]; then
  [ "$mode" != "list" ] && echo -e " \e[0;33m● No notes found for \e[1m'$*'\e[0m"
  exit 1
fi

filenames=$( echo -e "\e[1m${files[*]}\e[0m" | sed -r "s,$VAULT/,,g" )

case "$mode" in
  open)
    if [ "${#files[@]}" -gt 0 ]; then
      mapfile -t files < <(
        for file in "${files[@]}"; do
          echo "obsidian://open?path=$( echo -n "$file" | jq -rR @uri )"
        done
      )
    fi

    echo -e " \e[0;32m● Opening: $filenames"
    flatpak run md.obsidian.Obsidian -- "${files[@]}" &>/dev/null &
    wmctrl -xa obsidian
    ;;
  list)
    printf '%s\n' "${files[@]}"
    ;;
  edit)
    echo -e " \e[0;32m● Editing: $filenames"
    exec sensible-vim "${files[@]}"
    ;;
esac
