# vim: foldmethod=marker foldlevel=0

### general settings
# {{{

  set -g default-terminal 'tmux-256color'
  set -g allow-passthrough on
  set -g history-limit 100000
  set -g escape-time 0
  set -g base-index 1
  set -g renumber-windows on
  set -g focus-events on
  set -g word-separators " \t\n{}[]()\"'`"

  set -g pane-base-index 1
  set -g pane-border-lines heavy
  set -g menu-border-lines rounded
  set -g popup-border-lines rounded
  set -g monitor-activity on
  set -g activity-action none
  set -g other-pane-height 25
  set -g other-pane-width 80

  # enable additional terminal features
  set -ga terminal-features '*:RGB:hyperlinks:usstyle'

  # desktop integration
  set -g set-titles on
  set -g set-titles-string '#{?SSH_CONNECTION,@#{host}: ,}#{?#{==:#{pane_current_command},nvim},,#{pane_current_command}: }#{pane_title}'
  set -g set-clipboard on

  # mouse support
  set -g mouse on

# }}}

## statusline and colors
# {{{

  %hidden ACCENT='#697098'

  %hidden BG0='#11131a'
  %hidden BG1='#191c26'
  %hidden BG2='#222633'
  %hidden BG3='#2f3347'
  %hidden BG4='#3b4048'

  %hidden FG0='#e6e6ff'
  %hidden FG1='#bfc7d5'
  %hidden FG2='#4b5263'

  %hidden SEARCH_BG0='#2d402d'
  %hidden SEARCH_BG1='#5f875f'
  %hidden SEARCH_FG0='#d7ffaf'
  %hidden SEARCH_FG1='#ecffd9'

  %hidden FG_LAST='#82b1ff'
  %hidden FG_ACTIVITY='#c3e88d'

  set -g message-style 'fg=white, bg=#{BG2}, bold'
  set -g mode-style 'fg=white, bg=#{SEARCH_BG1}, bold'

  set -g pane-border-style 'bg=default, fg=#{BG3}'
  set -g pane-active-border-style 'bg=default, fg=#{FG2}'
  set -g menu-border-style 'bg=default, fg=#{FG1}'
  set -g popup-border-style 'bg=default, fg=#{FG1}'

  set -g copy-mode-match-style 'fg=#{SEARCH_FG0}, bg=#{SEARCH_BG0}, bold'
  set -g copy-mode-current-match-style 'fg=#{SEARCH_FG1}, bg=#{SEARCH_BG1}, bold'

  set -g status-style 'fg=#{ACCENT}, bg=#{BG0}'
  set -g window-status-style 'bg=#{BG1}'
  set -g window-status-current-style 'bold'
  set -g window-status-last-style 'fg=#{FG_LAST}, bg=#{BG1}, bold'
  set -g window-status-activity-style 'fg=#{FG_ACTIVITY}, bold'
  set -g window-status-separator ''

  set -g status-left ''
  set -g status-right '#{?client_prefix,#[bold]prefix-,}#{?window_zoomed_flag, ,} #[fg=#{BG2}, bg=#{BG0}]#{?SSH_CONNECTION,,}#[fg=#{FG1}, bg=#{BG2}, bold]#{?SSH_CONNECTION, #H,}'

  set -g window-status-format '#[fg=#{BG2}, bg=#{BG0}]#{?#{==:#{window_index},1},,}#[fg=#{FG1}, bg=#{BG2}] #I #[fg=#{BG2}, bg=#{BG1}, nobold] #[default]#{?#{mr:^(bash|nvim|ssh)$,#{pane_current_command}},,#{pane_current_command}: }#{?#{==:#T,#H},,#{s/ (.*) \[.*/\1:pane_title}} #[fg=#{BG0}]'
  set -g window-status-current-format '#[fg=#{BG0}, bg=#{ACCENT}]#{?#{==:#{window_index},1},,}#[fg=white, bold] #I #[fg=#{ACCENT}, bg=#{BG3}, nobold] #[fg=white, bold]#{?#{mr:^(bash|nvim|ssh)$,#{pane_current_command}},,#{pane_current_command}: }#{?#{==:#T,#H},,#{s/ (.*) \[.*/\1:pane_title}} #[fg=#{BG3}, bg=#{BG0}]'

# }}}

### keybindings
# {{{

  set -g status-keys emacs
  set -g mode-keys vi

  unbind -n MouseDown3Pane
  unbind d
  unbind s
  bind D detach-client

  # use C-` as the prefix key
  unbind C-b
  set -g prefix C-Space
  bind ` send-prefix

  # use C-g as the prefix key in SSH
  if '[ -n "$SSH_CONNECTION" ]' 'set -g prefix2 C-g'
  if '[ -n "$SSH_CONNECTION" ]' 'bind g send-prefix -2'

  # reload the tmux configuration
  bind ! source-file ~/.config/tmux/tmux.conf

  # move to next/previous prompt
  bind -n M-\} 'copy-mode -e; send-keys -X next-prompt'
  bind -n M-\{ 'copy-mode -e; send-keys -X previous-prompt'
  bind -T copy-mode-vi \} send-keys -X next-prompt
  bind -T copy-mode-vi \{ send-keys -X previous-prompt

  # switch between windows
  bind -n M-[ previous-window
  bind -n M-] next-window

  # swap windows
  bind -n -r M-< swap-window -dt -1
  bind -n -r M-> swap-window -dt +1

  # align windows
  bind -n M-- select-layout even-vertical
  bind -n M-= select-layout even-horizontal
  bind -n M-+ select-layout tiled

  # zoom current pane
  bind      Enter resize-pane -Z
  bind -n M-Enter resize-pane -Z

  # break and join panes
  bind -n M-|     break-pane
  bind      |     choose-tree -Z { join-pane -s '%%' }

  # rename current pane
  bind , command-prompt -I '#T' -p '(rename-pane)' { select-pane -T '%%' }

  # switch between panes
  %hidden select="~/.config/tmux/scripts/select"

  bind                   h run 'tmux select-pane -L || true'
  bind -T copy-mode-vi C-h run 'tmux select-pane -L || true'
  bind -n              C-h run "$select -L || true"

  bind                   j run 'tmux select-pane -D || true'
  bind -T copy-mode-vi C-j run 'tmux select-pane -D || true'
  bind -n              C-j run "$select -D || true"

  bind                   k run 'tmux select-pane -U || true'
  bind -T copy-mode-vi C-k run 'tmux select-pane -U || true'
  bind -n              C-k run "$select -U || true"

  bind                   l run 'tmux select-pane -R || true'
  bind -T copy-mode-vi C-l run 'tmux select-pane -R || true'
  bind -n              C-l run "$select -R || true"

  bind                   \\ run "$select --last || true"
  bind -T copy-mode-vi M-\\ run "$select --last || true"
  bind -n              M-\\ run "$select --last || true"

  # open new windows/panes in current directory
  bind -n M-N new-window
  bind -n M-n new-window -c '#{pane_current_path}'

  bind      s split-window -vc '#{pane_current_path}'
  bind -n M-s split-window -vc '#{pane_current_path}'
  bind      v split-window -hc '#{pane_current_path}'
  bind -n M-v split-window -hc '#{pane_current_path}'

  bind      S split-window -vc '#{pane_current_path}' -l 35%
  bind -n M-S split-window -vc '#{pane_current_path}' -l 35%
  bind      V split-window -hc '#{pane_current_path}' -l 35%
  bind -n M-V split-window -hc '#{pane_current_path}' -l 35%

  # open full-size panes
  bind      H split-window -hfbc '#{pane_current_path}'
  bind      J split-window -vfc  '#{pane_current_path}'
  bind      K split-window -vfbc '#{pane_current_path}'
  bind      L split-window -hfc  '#{pane_current_path}'

  # resize panes
  bind -r C-h resize-pane -L 3
  bind -r C-j resize-pane -D 3
  bind -r C-k resize-pane -U 3
  bind -r C-l resize-pane -R 3

  # copy mode bindings
  bind                 [            copy-mode -e
  bind                 C-[          copy-mode -e
  bind -n              M-,          copy-mode -e
  bind -n              S-PageUp     copy-mode -eu
  bind -T copy-mode-vi S-PageUp     send -X page-up
  bind -T copy-mode-vi S-PageDown   send -X page-down

  bind -T copy-mode-vi ]            send -X cancel
  bind -T copy-mode-vi MouseUp3Pane send -X cancel

  bind -T copy-mode-vi v    send -X begin-selection
  bind -T copy-mode-vi C-q  send -X rectangle-toggle

  bind -T copy-mode-vi y    send -X copy-pipe-and-cancel 'xclip -selection clipboard'
  bind -T copy-mode-vi C-c  send -X copy-pipe-and-cancel 'xclip -selection clipboard'
  bind -T copy-mode-vi Y    send -X copy-pipe-and-cancel 'tmux paste-buffer -p'
  bind -T copy-mode-vi C-v  send -X copy-pipe-and-cancel 'tmux paste-buffer -p'

  # enter copy mode when double-/triple-clicking, instead of copying to tmux buffer
  bind -n DoubleClick1Pane 'select-pane -t =; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode -H; send-keys -X select-word }'
  bind -n TripleClick1Pane 'select-pane -t =; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode -H; send-keys -X select-line }'
  bind -T copy-mode-vi DoubleClick1Pane 'select-pane; send-keys -X select-word'
  bind -T copy-mode-vi TripleClick1Pane 'select-pane; send-keys -X select-line'

  # don't copy when ending mouse selection
  unbind -T copy-mode-vi MouseDragEnd1Pane

  # search shortcuts
  %hidden search='~/.config/tmux/scripts/search'

  bind    /   run "$search"
  bind -n M-/ run "$search"
  bind -n M-p run "$search paths"
  bind -n M-P run "$search prompts"
  bind -n M-q run "$search quotes"
  bind -n M-i run "$search interesting"

  # popup shortcuts
  bind B display-popup -w 90% -h 60% -y 38% -d '#{pane_current_path}' -T ' bash'   -E bash
  bind R display-popup -w 90% -h 60% -y 38% -d '#{pane_current_path}' -T '󰴭 ruby'   -E pry
  bind P display-popup -w 90% -h 60% -y 38% -d '#{pane_current_path}' -T '󰌠 python' -E python

# }}}

### plugins
# {{{

  run ~/.config/tmux/plugins/tmux-open/open.tmux

  bind y   run -b ~/.config/tmux/plugins/tmux-yank/scripts/copy_line.sh
  bind C-y run -b ~/.config/tmux/plugins/tmux-yank/scripts/copy_line.sh

# }}}
