# vim: foldmethod=marker foldlevel=0

### general settings
# {{{

  set -g default-terminal 'tmux-256color'
  set -g history-limit 10000
  set -g escape-time 0
  set -g base-index 1
  set -g renumber-windows on
  set -g focus-events on
  set -g allow-rename on

  set -g pane-base-index 1
  set -g pane-border-lines heavy
  set -g monitor-activity on
  set -g activity-action none
  set -g other-pane-height 25
  set -g other-pane-width 80

  # enable TrueColor
  set -sa terminal-overrides ',xterm*:Tc'

  # enable hyperlinks
  set -sa terminal-features '*:hyperlinks'

  # desktop integration
  set -g set-titles on
  set -g set-titles-string '#{?#{==:#{pane_current_command},vim},,#{pane_current_command}: }#{pane_title}'
  set -g set-clipboard on

  # mouse support
  set -g mouse on

# }}}

## colors
# {{{

  if '[ -n "$SSH_CONNECTION" ]' \
    'setenv -g TMUX_HOST_PROMPT "#(hostname) "' \
    'setenv -g TMUX_HOST_PROMPT ""'

  set -g message-style fg=white,bg=blue,bold
  set -g mode-style fg=white,bg=blue,bold

  set -g pane-border-style bg=default,fg=colour236
  set -g pane-active-border-style bg=default,fg=colour240

  set -g copy-mode-match-style bg=blue
  set -g copy-mode-current-match-style bg=yellow,fg=black

  set -g status-left ''
  set -g status-right '#{?client_prefix,#[bold]prefix-,}  #[fg=colour235,bg=blue,reverse]#[fg=colour252,noreverse] #[fg=white,bg=blue,bold]#(tmux showenv -g TMUX_HOST_PROMPT | cut -d= -f2-)'

  set -g status-style fg=colour243,bg=colour235
  set -g window-status-style default
  set -g window-status-current-style fg=white,bold
  set -g window-status-last-style fg=colour252,bold
  set -g window-status-activity-style fg=yellow,bold
  set -g window-status-separator ''

  set -g window-status-format '#{?#{==:#{window_index},1},, } #I #[fg=colour238,nobold] #[default]#{?window_last_flag,#[fg=colour252],}#{?window_activity_flag,#[fg=yellow],}#{?#{==:#{pane_current_command},bash},,#{pane_current_command}: }#W  '
  set -g window-status-current-format '#[fg=colour235,bg=blue]#{?#{==:#{window_index},1},,}#[fg=white] #I #[fg=blue,bg=colour237,nobold] #[fg=white,bold]#{?#{==:#{pane_current_command},bash},,#{pane_current_command}: }#W #[fg=colour237,bg=default]'

# }}}

### keybindings
# {{{

  set -g status-keys emacs
  set -g mode-keys vi

  unbind d
  unbind -n MouseDown3Pane

  # use C-` as the prefix key
  unbind C-b
  set -g prefix C-@
  bind ` send-prefix
  if '[ -n "$SSH_CONNECTION" ]' 'set -g prefix2 C-g'
  if '[ -n "$SSH_CONNECTION" ]' 'bind g send-prefix -2'

  # reload the tmux configuration
  bind R source-file ~/.tmux.conf

  # switch between windows
  bind -n M-[ previous-window
  bind -n M-] next-window

  # swap windows
  bind -n -r M-< swap-window -dt -1
  bind -n -r M-> swap-window -dt +1

  # align windows vertically
  bind = select-layout even-vertical

  # zoom and break current pane
  bind -n M-\\ resize-pane -Z
  bind -n M-|  break-pane

  # switch between panes
  select="~/.tmux/scripts/select"

  bind                   h run 'tmux select-pane -L || true'
  bind                 C-h run 'tmux select-pane -L || true'
  bind -T copy-mode-vi C-h run 'tmux select-pane -L || true'
  bind -n              C-h run "$select -L || true"

  bind                   j run 'tmux select-pane -D || true'
  bind                 C-j run 'tmux select-pane -D || true'
  bind -T copy-mode-vi C-j run 'tmux select-pane -D || true'
  bind -n              C-j run "$select -D || true"

  bind                   k run 'tmux select-pane -U || true'
  bind                 C-k run 'tmux select-pane -U || true'
  bind -T copy-mode-vi C-k run 'tmux select-pane -U || true'
  bind -n              C-k run "$select -U || true"

  bind                   l run 'tmux select-pane -R || true'
  bind                 C-l run 'tmux select-pane -R || true'
  bind -T copy-mode-vi C-l run 'tmux select-pane -R || true'
  bind -n              C-l run "$select -R || true"

  bind                   \\ run "$select --last || true"
  bind                 C-\\ run "$select --last || true"
  bind -T copy-mode-vi C-\\ run "$select --last || true"
  bind -n              C-\\ run "$select --last || true"

  # resize panes
  bind -r   H resize-pane -L 3
  bind -r C-H resize-pane -L 3
  bind -r   J resize-pane -D 3
  bind -r C-J resize-pane -D 3
  bind -r   K resize-pane -U 3
  bind -r C-K resize-pane -U 3
  bind -r   L resize-pane -R 3
  bind -r C-L resize-pane -R 3

  # copy mode bindings
  bind                 [          copy-mode -e
  bind                 C-[        copy-mode -e
  bind -n              S-PageUp   copy-mode -eu
  bind -n              S-PageDown send
  bind -T copy-mode-vi S-PageUp   send -X page-up
  bind -T copy-mode-vi S-PageDown send -X page-down
  bind -T copy-mode-vi ]          send -X cancel
  bind -T copy-mode-vi v          send -X begin-selection
  unbind -T copy-mode-vi C-j

  # search shortcuts
  search='~/.tmux/scripts/search'
  bind    /   run "$search"
  bind -n M-/ run "$search"
  bind -n M-p run "$search paths"
  bind -n M-l run "$search prompts"
  bind -n M-i run "$search interesting"

  # open new windows/panes in current directory (also requires PROMPT_COMMAND)
  bind c   new-window
  bind C-c new-window
  bind C   new-window -c '#{pane_current_path}'

  bind s   split-window -v -c '#{pane_current_path}'
  bind C-s split-window -v -c '#{pane_current_path}'
  bind v   split-window -h -c '#{pane_current_path}'
  bind C-v split-window -h -c '#{pane_current_path}'

  bind b   split-window -v -c '#{pane_current_path}' -l 35%
  bind C-b split-window -v -c '#{pane_current_path}' -l 35%
  bind r   split-window -h -c '#{pane_current_path}' -l 35%
  bind C-r split-window -h -c '#{pane_current_path}' -l 35%

  bind S run '
    tmux set-option -w synchronize-panes;
    tmux show-options -w synchronize-panes
      | fgrep -q off && tmux display "Pane synchronization disabled"
      || tmux display "Pane synchronization enabled"
  '

# }}}

### plugins
# {{{

  set -g @yank_selection_mouse 'clipboard'
  run ~/.tmux/yank/yank.tmux
  run ~/.tmux/open/open.tmux

# }}}
